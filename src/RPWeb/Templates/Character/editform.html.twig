{% extends "Layout/layout.html.twig" %}

{% block title %}Character editor{% endblock %}

{% block pageheadline %}Character editor{% endblock %}

{% block head %}
    <script type="text/javascript" src="/assets/js/cropper.min.js" ></script>
    <link rel="stylesheet" type="text/css" href="/assets/css/cropper.min.css" />    
    <script type="text/javascript" src="/assets/js/jquery-ui.min.js" ></script>
    <link rel="stylesheet" type="text/css" href="/assets/css/jquery-ui.min.css" />    

    <style type="text/css">
    .cropper-view-box {
        border-radius: 50%;
        outline: none; 
    }
    </style>
{% endblock %}

{% block maincontent %}
<div class="row">
    <div class="col-12">
        <form method="post" action="{{ url('character.submit') }}" enctype="multipart/form-data">
            {% if (errors is defined) and (errors|length > 0) %}
                <div class="alert alert-danger">
                    <h4 class="alert-heading">Character cannot be saved!</h4>
                    <ul>
                        {% for error in errors %}
                            <li>{{ error|raw }}</li>
    	                {% endfor %}
                    </ul>
                </div>
            {% endif %}
            <div class="form-group">
                <label for="charshortkey">Character shortkey</label>
                <input type="text" class="form-control" name="shortkey" id="charshortkey" aria-describedby="charHelp" placeholder="Shortkey" value="{{ character.character_shortname }}" maxlength="16" />
                <small id="charHelp" class="form-text text-muted">Up to 16 charcters, only latin lower-case letters and numbers.</small>
            </div>
            <div class="form-group">
                <label for="charname">Character name</label>
                <input type="text" class="form-control" name="name" id="charname" placeholder="Character name" value="{{ character.character_name }}" />
                <small id="charHelp" class="form-text text-muted">Up to 32 characters, Discord naming restrictions apply.</small>
            </div>
            <div class="form-group">
                <label for="charavatar">Avatar</label>
                <input type="file" class="form-control-file" name="avatar" id="charavatar" onchange="cropImgFunc(event)" />
            </div>
            <input type="hidden" name="crop-x" id="crop-x" value="-1" />
            <input type="hidden" name="crop-y" id="crop-y" value="-1" />
            <input type="hidden" name="crop-width" id="crop-width" value="-1" />
            <input type="hidden" name="id" value="{{ character.id }}" />
            <input type="hidden" name="csrf" value="{{ csrf_token('edit-char' ~ character.id) }}" />
            <button type="submit" class="btn btn-primary">Submit</button>
            <a href="{{ url('character.index') }}" class="btn btn-secondary">Cancel</a>
        </form>
    </div>
</div>
{% endblock %}

{% block footer %}
<!-- Modal -->
<div class="modal fade" id="preview-modal" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Image cropping</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body" id="mdd-body">
        <div class="result" id="inputImg"></div>
        <div>
            <a href="javascript:void(0)" id="zoom-in-button" style="display: inline-block; width: 30px; height: 30px; background-color:white; text-align: center; color: black; border: 1px solid black; border-right: 0px; margin: 0px;">+</a><a id="zoom-out-button" href="javascript:void(0); return false;" style="display: inline-block; width: 30px; height: 30px; background-color:white; text-align: center; color: black; border: 1px solid black; margin: 0px;">-</a>
            <span id="zoom-level"></span>
        </div>

        {# <img class="preImg" id="preImg" src="about:blank" /> #}
        <div id="errorMsg" style="font-weight: bold; text-align:center; color: red; display:none;"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" onclick="cancelCropping()">Cancel</button>
        <button type="button" class="btn btn-primary" onclick="saveCropping()">Save</button>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
var gCropper = null;
function cancelCropping() {
    $('#preview-modal').modal('hide');
    $('#charavatar')[0].value = '';
}

function saveCropping() {
    cropData = gCropper.getData(true);

    var wdt = cropData.width;
    var x = cropData.x;
    var y = cropData.y;

    if(wdt < 128) {
        $('#errorMsg').show();
        $('#errorMsg').text("The selected area is too small - it must be at least 128 by 128 pixels large.");
    } else {
        $('#crop-x').val(x);
        $('#crop-y').val(y);
        $('#crop-width').val(wdt);

        $('#errorMsg').hide();
        $('#preview-modal').modal('hide');
    }
}

$(function() {
    $('#zoom-in-button').click(function() { picZoom(0.25); });
    $('#zoom-out-button').click(function() { picZoom(-0.25); });
});

function picZoom(zoom) {
    gCropper.zoom(zoom);    

    return false;
}

function afterZoom() {
    cropData = gCropper.getData(true);
    var wdt = cropData.width;

    $('#zoom-level').text('Dimension: ' + wdt + 'x' + wdt);
}

minWidth = -1;
var cImg = null;
$('#preview-modal').on('shown.bs.modal', function () {
    width = $('#inputImg').innerWidth();        
    genCropper(cImg, width);    
});

function genCropper(img, minWidth) {
    result = document.querySelector('#inputImg');
    img.height = minWidth;
    img.width = minWidth;
    result.append(img);

    cropper = new Cropper(img, {
        viewMode: 1,
        dragMode: 'move',
        aspectRatio: 1,
        autoCropArea: 1,
        minContainerWidth: minWidth,
        minContainerHeight: minWidth,
        maxContainerWidth: minWidth,
        maxContainerHeight: minWidth,
        center: false,
        zoomOnWheel: true,
        zoomOnTouch: true,
        cropBoxMovable: false,
        cropBoxResizable: false,
        guides: false,
        ready: function(event) {
            this.cropper = cropper;
            picZoom(0);
        },
        zoom: function() {
            window.setTimeout(function() {
                afterZoom();
            }, 50);
        },
        cropend: function() {
            afterZoom();
        }
    });
    gCropper = cropper;  
}

function cropImgFunc(event) {
    if (event.target.files.length) {
        // start file reader
        const reader = new FileReader();
        reader.onload = function(event) {
            if(event.target.result) {
                // create new image
                let img = document.createElement('img');
                img.id = 'image';
                img.src = event.target.result;
                /*img.width = 544;
                img.height = 370;*/
                // clean result before
                document.querySelector('#inputImg').innerHTML = '';
                // append new image
                cImg = img;
                $('#errorMsg').hide();
                $('#preview-modal').modal('show');                              
            }
        };
        reader.readAsDataURL(event.target.files[0]);
    }
}
</script>
{% endblock %}